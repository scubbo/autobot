AWSTemplateFormatVersion: "2010-09-09"
Outputs:
  LambdaOutput:
    Description: Lambda Function Name
    Value:
      !GetAtt Lambda.Arn
Parameters:
  paramProjectName:
    Description: The name of the project. Used in naming Resources
    Type: String
  paramS3Bucket:
    Description: Part of the location of the Lambda code
    Type: String
  paramS3Key:
    Description: Part of the location of the Lambda code
    Type: String
  paramScriptName:
    Default: AutoBot
    Description: The name of the script that created the resources
    Type: String
Resources:
  Api:
    Properties:
      Description:
        !Join ["",["Created by ", !Ref paramScriptName]]
      FailOnWarnings: true
      Name:
        !Join ["",[!Ref paramProjectName, "_API"]]
    Type: AWS::ApiGateway::RestApi
  ApiDeployment:
    DependsOn:
    - SlackRequest
    Properties:
      Description:
        !Join ["", ["Created by ", !Ref paramScriptName]]
      RestApiId:
        Ref: Api
      StageName: DummyStage
    Type: AWS::ApiGateway::Deployment
  ApiGatewayAccount:
    Properties:
      CloudWatchRoleArn:
        !GetAtt ApiGatewayCloudWatchLogsRole.Arn
    Type: AWS::ApiGateway::Account
  ApiGatewayCloudWatchLogsRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
        Version: "2012-10-17"
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutLogEvents
            - logs:GetLogEvents
            - logs:FilterLogEvents
            Effect: Allow
            Resource: "*"
          Version: "2012-10-17"
        PolicyName: ApiGatewayLogsPolicy
    Type: AWS::IAM::Role
  ApiStage:
    DependsOn:
    - ApiGatewayAccount
    Properties:
      DeploymentId:
        Ref: ApiDeployment
      Description:
        !Join ["",["Created by ", !Ref paramScriptName]]
      MethodSettings:
      - DataTraceEnabled: true
        HttpMethod: "*"
        LoggingLevel: INFO
        ResourcePath: /*
      RestApiId:
        Ref: Api
      StageName: LATEST
    Type: AWS::ApiGateway::Stage
  Lambda:
    Properties:
      Code:
        S3Bucket:
          Ref: paramS3Bucket
        S3Key:
          Ref: paramS3Key
      Description:
        !Join ["", ["Created by ", !Ref paramScriptName]]
      Handler: index.handler
      Role:
        !GetAtt LambdaCloudwatchRole.Arn
      Runtime: python2.7
    Type: AWS::Lambda::Function
  LambdaCloudwatchRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: "2012-10-17"
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - logs:*
            Effect: Allow
            Resource: arn:aws:logs:*:*:*
          Version: "2012-10-17"
        PolicyName: LambdaLogsPolicy
    Type: AWS::IAM::Role
  LambdaPermission:
    Properties:
      Action: lambda:invokeFunction
      FunctionName:
        !GetAtt Lambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        !Join ["",["arn:aws:execute-api:", !Ref "AWS::Region", ":", !Ref "AWS::AccountId", ":", !Ref Api, "/*"]]
    Type: AWS::Lambda::Permission
  SlackRequest:
    DependsOn:
    - LambdaPermission
    Properties:
      AuthorizationType: None
      HttpMethod: POST
      Integration:
        IntegrationHttpMethod: POST
        IntegrationResponses:
        - StatusCode: 200
        PassthroughBehavior: WHEN_NO_MATCH
        Type: AWS
        Uri:
          !Join ["", ["arn:aws:apigateway:", !Ref "AWS::Region", ":lambda:path/2015-03-31/functions/", !GetAtt Lambda.Arn, "/invocations"]]
      MethodResponses:
      - StatusCode: 200
      ResourceId:
        Ref: SlackResource
      RestApiId:
        Ref: Api
    Type: AWS::ApiGateway::Method
  SlackResource:
    Properties:
      ParentId:
        !GetAtt Api.RootResourceId
      PathPart: slack
      RestApiId:
        Ref: Api
    Type: AWS::ApiGateway::Resource
