{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Metadata": {
        "AWS::CloudFormation::Designer": {
            "6befbfa1-e6ed-420c-874a-03b9ae448f23": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 630,
                    "y": 131
                },
                "z": 0,
                "embeds": []
            },
            "06fd4f39-88a0-4b3c-a921-71d7a8b33ce3": {
                "size": {
                    "width": 230,
                    "height": 210
                },
                "position": {
                    "x": 70,
                    "y": 160
                },
                "z": 0,
                "embeds": []
            },
            "936a199e-0ef9-448a-bdff-47fed8810a4c": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 447,
                    "y": 31
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "6befbfa1-e6ed-420c-874a-03b9ae448f23"
                ],
                "isrelatedto": [
                    "06fd4f39-88a0-4b3c-a921-71d7a8b33ce3"
                ]
            },
            "3293712f-f8bd-49f1-8d08-dba8c4d7742d": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 240,
                    "y": 50
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "06fd4f39-88a0-4b3c-a921-71d7a8b33ce3",
                    "72a7f36d-655d-4126-84df-23cc4f15f036"
                ],
                "dependson": [
                    "e5e697f4-4d09-479b-a0f9-2aca8d83b9bc"
                ]
            },
            "e5e697f4-4d09-479b-a0f9-2aca8d83b9bc": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -160,
                    "y": 30
                },
                "z": 0,
                "embeds": [],
                "isrelatedto": [
                    "cd5bfcbd-c5dd-4229-9381-12130616a175"
                ]
            },
            "cd5bfcbd-c5dd-4229-9381-12130616a175": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -160,
                    "y": 280
                },
                "z": 0,
                "embeds": []
            },
            "72a7f36d-655d-4126-84df-23cc4f15f036": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": -30,
                    "y": 50
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "06fd4f39-88a0-4b3c-a921-71d7a8b33ce3"
                ]
            },
            "6db85f27-5dbb-4be9-9ae1-4afbdc858e3c": {
                "size": {
                    "width": 140,
                    "height": 140
                },
                "position": {
                    "x": 509.9066610876536,
                    "y": 292.9297400968
                },
                "z": 0,
                "embeds": [],
                "isassociatedwith": [
                    "06fd4f39-88a0-4b3c-a921-71d7a8b33ce3"
                ]
            },
            "988558ee-d57d-4f33-8725-18d710a21adb": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 214.98805075693681,
                    "y": 382.43480994839786
                },
                "z": 0,
                "embeds": [],
                "isrelatedto": [
                    "6befbfa1-e6ed-420c-874a-03b9ae448f23"
                ]
            },
            "afe1fb8d-6faf-41fb-9ddf-dceb34b33f46": {
                "size": {
                    "width": 60,
                    "height": 60
                },
                "position": {
                    "x": 550,
                    "y": -60
                },
                "z": 0,
                "embeds": [],
                "dependson": [
                    "936a199e-0ef9-448a-bdff-47fed8810a4c"
                ],
                "isrelatedto": [
                    "6befbfa1-e6ed-420c-874a-03b9ae448f23"
                ]
            },
            "a5618fb9-33eb-489f-b3b8-1dc09fdd398c": {
                "source": {
                    "id": "afe1fb8d-6faf-41fb-9ddf-dceb34b33f46"
                },
                "target": {
                    "id": "936a199e-0ef9-448a-bdff-47fed8810a4c"
                },
                "z": 11
            },
            "1b8e946a-16fd-4ac7-b707-e9b175c20320": {
                "source": {
                    "id": "3293712f-f8bd-49f1-8d08-dba8c4d7742d"
                },
                "target": {
                    "id": "e5e697f4-4d09-479b-a0f9-2aca8d83b9bc"
                },
                "z": 11
            }
        }
    },
    "Parameters": {
      "paramScriptName": {
        "Type": "String",
        "Default": "AutoBot",
        "Description": "The name of the script that created the resources"
      },
      "paramProjectName": {
        "Type": "String",
        "Description": "The name of the project. Used in naming Resources"
      },
      "paramGithubRepo": {
        "Type": "String",
        "Description": "The GitHub Repo to pull into the Pipeline from"
      },
      "paramGithubUser": {
        "Type": "String",
        "Description": "The GitHub User"
      },
      "paramGithubOAuthToken": {
        "Type": "String",
        "Description": "OAuth Token for GitHub"
      }
    },
    "Resources": {
        "Api": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": {
                    "Fn::Join": [
                        "",
                        [
                            {
                                "Ref": "paramProjectName"
                            },
                            "_API"
                        ]
                    ]
                },
                "Description": {
                    "Fn::Join": [
                        "",
                        [
                            "Created by ",
                            {
                                "Ref": "paramScriptName"
                            }
                        ]
                    ]
                },
                "FailOnWarnings": true
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "06fd4f39-88a0-4b3c-a921-71d7a8b33ce3"
                }
            }
        },
        "LambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "Lambda",
                        "Arn"
                    ]
                },
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "Api"
                            },
                            "/*"
                        ]
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "936a199e-0ef9-448a-bdff-47fed8810a4c"
                }
            }
        },
        "ApiStage": {
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {
                    "Ref": "ApiDeployment"
                },
                "MethodSettings": [
                    {
                        "DataTraceEnabled": true,
                        "HttpMethod": "*",
                        "LoggingLevel": "INFO",
                        "ResourcePath": "/*"
                    }
                ],
                "RestApiId": {
                    "Ref": "Api"
                },
                "StageName": "LATEST",
                "Description": {
                    "Fn::Join": [
                        "",
                        [
                            "Created by ",
                            {
                                "Ref": "paramScriptName"
                            }
                        ]
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "3293712f-f8bd-49f1-8d08-dba8c4d7742d"
                }
            },
            "DependsOn": [
                "ApiGatewayAccount"
            ]
        },
        "ApiGatewayAccount": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {
                    "Fn::GetAtt": [
                        "ApiGatewayCloudWatchLogsRole",
                        "Arn"
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "e5e697f4-4d09-479b-a0f9-2aca8d83b9bc"
                }
            }
        },
        "ApiGatewayCloudWatchLogsRole": {
            "Type": "AWS::IAM::Role",
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "cd5bfcbd-c5dd-4229-9381-12130616a175"
                }
            },
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "apigateway.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "ApiGatewayLogsPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:DescribeLogGroups",
                                        "logs:DescribeLogStreams",
                                        "logs:PutLogEvents",
                                        "logs:GetLogEvents",
                                        "logs:FilterLogEvents"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "ApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": ["SlackRequest"],
            "Properties": {
                "RestApiId": {
                    "Ref": "Api"
                },
                "StageName": "DummyStage",
                "Description": {
                    "Fn::Join": [
                        "",
                        [
                            "Created by ",
                            {
                                "Ref": "paramScriptName"
                            }
                        ]
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "72a7f36d-655d-4126-84df-23cc4f15f036"
                }
            }
        },
        "SlackResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "Api"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "Api",
                        "RootResourceId"
                    ]
                },
                "PathPart": "slack"
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6db85f27-5dbb-4be9-9ae1-4afbdc858e3c"
                }
            }
        },
        "SlackRequest": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "None",
                "HttpMethod": "POST",
                "Integration": {
                    "Type": "AWS",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {
                        "Fn::Join": [
                            "",
                            [
                                "arn:aws:apigateway:",
                                {
                                    "Ref": "AWS::Region"
                                },
                                ":lambda:path/2015-03-31/functions/",
                                {
                                    "Fn::GetAtt": [
                                        "Lambda",
                                        "Arn"
                                    ]
                                },
                                "/invocations"
                            ]
                        ]
                    },
                    "IntegrationResponses": [
                        {
                            "StatusCode": 200
                        }
                    ],
                    "PassthroughBehavior": "WHEN_NO_MATCH"
                },
                "ResourceId": {
                    "Ref": "SlackResource"
                },
                "RestApiId": {
                    "Ref": "Api"
                },
                "MethodResponses": [
                    {
                        "StatusCode": 200
                    }
                ]
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "afe1fb8d-6faf-41fb-9ddf-dceb34b33f46"
                }
            },
            "DependsOn": [
                "LambdaPermission"
            ]
        },
        "LambdaCloudwatchRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "LambdaLogsPolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:*"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "Lambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "ZipFile" : {"Fn::Join": ["\n", [
                        "def handler(event, context):",
                        "  return 5*event['val']"
                    ]]}
                },
                "Handler": "index.handler",
                "Role": {"Fn::GetAtt": ["LambdaCloudwatchRole", "Arn"]},
                "Runtime": "python2.7",
                "Description": {
                    "Fn::Join": [
                        "",
                        [
                            "Created by ",
                            {
                                "Ref": "paramScriptName"
                            }
                        ]
                    ]
                }
            },
            "Metadata": {
                "AWS::CloudFormation::Designer": {
                    "id": "6befbfa1-e6ed-420c-874a-03b9ae448f23"
                }
            }
        },
        "PipelineBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": {"Fn::Join": ["", [
                    {"Ref":"paramProjectName"},
                    "-bucket"
                ]]}
            }
        },
        "PipelineRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "codepipeline.amazonaws.com"
                            }
                        }
                    ]
                },
                "Policies": [{"PolicyName": "PipelineRolePolicy", "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:GetBucketVersioning"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "s3:PutObject"
                            ],
                            "Resource": [
                                "arn:aws:s3:::codepipeline*",
                                "arn:aws:s3:::elasticbeanstalk*"
                            ],
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codecommit:CancelUploadArchive",
                                "codecommit:GetBranch",
                                "codecommit:GetCommit",
                                "codecommit:GetUploadArchiveStatus",
                                "codecommit:UploadArchive"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetApplicationRevision",
                                "codedeploy:GetDeployment",
                                "codedeploy:GetDeploymentConfig",
                                "codedeploy:RegisterApplicationRevision"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "elasticbeanstalk:*",
                                "ec2:*",
                                "elasticloadbalancing:*",
                                "autoscaling:*",
                                "cloudwatch:*",
                                "s3:*",
                                "sns:*",
                                "cloudformation:*",
                                "rds:*",
                                "sqs:*",
                                "ecs:*",
                                "iam:PassRole"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "lambda:InvokeFunction",
                                "lambda:ListFunctions"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "opsworks:CreateDeployment",
                                "opsworks:DescribeApps",
                                "opsworks:DescribeCommands",
                                "opsworks:DescribeDeployments",
                                "opsworks:DescribeInstances",
                                "opsworks:DescribeStacks",
                                "opsworks:UpdateApp",
                                "opsworks:UpdateStack"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "cloudformation:CreateStack",
                                "cloudformation:DeleteStack",
                                "cloudformation:DescribeStacks",
                                "cloudformation:UpdateStack",
                                "cloudformation:CreateChangeSet",
                                "cloudformation:DeleteChangeSet",
                                "cloudformation:DescribeChangeSet",
                                "cloudformation:ExecuteChangeSet",
                                "cloudformation:SetStackPolicy",
                                "cloudformation:ValidateTemplate",
                                "iam:PassRole"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codebuild:BatchGetBuilds",
                                "codebuild:StartBuild"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }}],
                "Path": "/",
                "RoleName": {"Fn::Join": ["", [
                    {"Ref": "paramProjectName"},
                    "_pipeline-role"
                ]]}
            }
        },
        "CodeBuildRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "codebuild.amazonaws.com"
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                ],
                "Path": "/service-role/",
                "RoleName": {"Fn::Join": ["", [
                    {"Ref": "paramProjectName"},
                    "_code-build-role"
                ]]}
            }
        },
        "CodeBuildProject": {
            "Type": "AWS::CodeBuild::Project",
            "Properties": {
                "Artifacts": {
                    "Type": "CODEPIPELINE"
                },
                "Description": {
                    "Fn::Join": [
                        "",
                        [
                            "Created by ",
                            {
                                "Ref": "paramScriptName"
                            }
                        ]
                    ]
                },
                "Environment": {
                    "ComputeType": "BUILD_GENERAL1_SMALL",
                    "EnvironmentVariables": [],
                    "Image": "aws/codebuild/python:2.7.12",
                    "PrivilegedMode": false,
                    "Type": "LINUX_CONTAINER"
                },
                "Name": {"Fn::Join": ["", [
                    {"Ref": "paramProjectName"},
                    "_code-build-project"
                ]]},
                "ServiceRole": {"Fn::GetAtt": ["CodeBuildRole", "Arn"]},
                "Source": {"Type": "CODEPIPELINE"},
                "TimeoutInMinutes": 60
            }
        },
        "LambdaUpdateRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudformation.amazonaws.com"
                            }
                        }
                    ]
                },
                "ManagedPolicyArns": ["arn:aws:iam::aws:policy/AWSLambdaExecute"],
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": {"Fn::Join": ["", [
                            {"Ref": "paramProjectName"},
                            "_lambda-update-policy"
                        ]]},
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": ["s3:GetObject","s3:GetObjectVersion","s3:GetBucketVersioning"],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": ["s3:PutObject"],
                                    "Resource": "arn:aws:s3:::codepipeline*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": ["lambda:*"],
                                    "Resource": "arn:aws:lambda:*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": ["apigateway:*"],
                                    "Resource": "arn:aws:apigateway",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": ["iam:GetRole","iam:CreateRole","iam:DeleteRole"],
                                    "Resource": {"Fn::Join": ["", [
                                        "arn:aws:iam::",
                                        {"Ref": "AWS::AccountId"},
                                        ":role/*"
                                    ]]},
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": ["iam:AttachRolePolicy","iam:DetahRolePolicy"],
                                    "Resource": {"Fn::Join": ["", [
                                        "arn:aws:iam::",
                                        {"Ref": "AWS::AccountId"},
                                        ":role/*"
                                    ]]},
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": ["iam:PassRole"],
                                    "Resource": "*",
                                    "Effect": "Allow"
                                },
                                {
                                    "Action": ["cloudformation:CreateChangeSet"],
                                    "Resource": {"Fn::Join": ["", [
                                        "arn:aws:cloudformation:",
                                        {"Ref": "AWS::Region"},
                                        ":aws:transform/Serverless-2016-10-31"
                                    ]]},
                                    "Effect": "Allow"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "Pipeline": {
            "Type": "AWS::CodePipeline::Pipeline",
            "DependsOn": ["PipelineBucket", "PipelineRole"],
            "Properties": {
                "ArtifactStore": {
                    "Type": "S3",
                    "Location": {"Ref":"PipelineBucket"}
                },
                "Name": {"Fn::Join": ["", [
                    {"Ref": "paramProjectName"},
                    "_pipeline"
                ]]},
                "RoleArn": {"Fn::GetAtt": ["PipelineRole", "Arn"]},
                "Stages": [
                    {
                        "Name": "Source",
                        "Actions": [
                            {
                                "InputArtifacts": [],
                                "Name": "Source",
                                "ActionTypeId": {
                                    "Category": "Source",
                                    "Owner": "ThirdParty",
                                    "Version": "1",
                                    "Provider": "GitHub"
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": {"Ref": "paramProjectName"}
                                    }
                                ],
                                "Configuration": {
                                    "Owner": {"Ref": "paramGithubUser"},
                                    "Repo": {"Ref": "paramGithubRepo"},
                                    "Branch": "master",
                                    "OAuthToken": {"Ref": "paramGithubOAuthToken"}
                                },
                                "RunOrder": 1
                            }
                        ]
                    },
                    {
                        "Name": "Build",
                        "Actions": [
                            {
                                "InputArtifacts": [
                                    {
                                        "Name": {"Ref": "paramProjectName"}
                                    }
                                ],
                                "Name": "CodeBuild",
                                "ActionTypeId": {
                                    "Category": "Build",
                                    "Owner": "AWS",
                                    "Version": "1",
                                    "Provider": "CodeBuild"
                                },
                                "OutputArtifacts": [
                                    {
                                        "Name": {"Fn::Join": ["", [
                                            {"Ref": "paramProjectName"},
                                            "_built"
                                        ]]}
                                    }
                                ],
                                "Configuration": {
                                    "ProjectName": {"Ref": "CodeBuildProject"}
                                },
                                "RunOrder": 1
                            }
                        ]
                    },
                    {
                        "Name": "Staging",
                        "Actions": [
                            {
                                "InputArtifacts": [
                                    {
                                        "Name": {"Fn::Join": ["", [
                                          {"Ref": "paramProjectName"},
                                          "_built"
                                        ]]}
                                    }
                                ],
                                "Name": "LambdaStack",
                                "ActionTypeId": {
                                    "Category": "Deploy",
                                    "Owner": "AWS",
                                    "Version": "1",
                                    "Provider": "CloudFormation"
                                },
                                "OutputArtifacts": [],
                                "Configuration": {
                                    "ActionMode": "CREATE_UPDATE",
                                    "ChangeSetName": "LambdaChangeSet",
                                    "RoleArn": {"Fn::GetAtt": ["LambdaUpdateRole", "Arn"]},
                                    "Capabilities": "CAPABILITY_IAM",
                                    "StackName": {"Ref": "AWS::StackName"},
                                    "TemplatePath": {"Fn::Join": ["", [
                                        {"Ref": "paramProjectName"},
                                        "_built",
                                        "::",
                                        "NewSamTemplate.yaml"
                                    ]]}
                                },
                                "RunOrder": 1
                            }
                        ]
                    }
                ]
            }
        }
    },
    "Outputs": {
        "AddressOutput": {
            "Description": "Address",
            "Value": {"Fn::Join": ["", ["https://", {"Ref": "Api"}, ".execute-api.", {"Ref": "AWS::Region"}, ".amazonaws.com/LATEST/slack"]]}
        },
        "LambdaOutput": {
            "Description": "Lambda Function Name",
            "Value": {"Fn::GetAtt": ["Lambda", "Arn"]}
        }
    }
}
